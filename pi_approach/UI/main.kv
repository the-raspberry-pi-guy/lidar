# main.kv
# Kivy language code to define the nature
# of the various aspects of the UI
# Fully touch enabled
# Author: Matthew Timmons-Brown

#:kivy 1.9.2

# Define some global variables for use in the layout
#:set bar_height_width 100
#:set black [0,0,0,1]
#:set yheight 480
#:set xwidth 800

# Create a screen manager with the Init screen and Main screen
ScreenManagement:
	InitScreen:
	MainScreen:

# Init Screen
# Code to define the look of the Init screen
<InitScreen>:
	name:"initial"
	# Base structure of UI on a 2x2 grid
	GridLayout:
		canvas.before:
			# Set background image and draw border bars
			Rectangle:
				size:self.size
				source:"Background.png"
			Color:
				rgba:black
			Rectangle:
				pos:[bar_height_width,yheight]
				size:[5,-yheight]
			Rectangle:
				pos:[0,yheight-bar_height_width-10]
				size:[xwidth,5]
		cols: 2
		rows: 2

		# Put logo in place
		Image:
			source:"logo.png"
			size_hint_x:None
			size_hint_y:None
			height:bar_height_width
			width:bar_height_width

		# Add text to explain what the user has to do
		# to progress to the main screen
		Label:
			text:"Initialising. Power on stepper motor & distance modules!"
			color:black
			font_size:35
			text_size:self.size
			halign:"center"
			valign:"center"
			size_hint_y:None
			height:bar_height_width

		# Add on/off switch
		Switch:
			id: onoffswitch
			active: True
			# If switch is pressed, call the power_off() function
			on_active: root.power_off()
			size_hint_x:None
			width:bar_height_width

		# Create 3 boxes to house the different NO/OK
		# messages for the subsystem
		BoxLayout:
			orientation:"horizontal"
			Label:
				markup:True
				text:"[size=40]Receiver:[/size]\n\n[size=60]
									[color=008000]OK[/color][/size]"
				halign:"center"
				valign:"top"
				color:black
			Label:
				id: stepper_label
				markup:True
				text:"[size=40]Stepper:[/size]\n\n[size=60]
									[color=ff0000]NO[/color][/size]"
				halign:"center"
				valign:"top"
				color:black
			Label:
				id: distance_label
				markup:True
				text:"[size=40]Distance:[/size]\n\n[size=60]
									[color=ff0000]NO[/color][/size]"
				halign:"center"
				valign:"top"
				color:black

# Main Screen
# Code to define the look of the main screen
<MainScreen>:
	name:"main"
	# Base structure of UI on a 2x2 grid
	GridLayout:
		canvas.before:
			# Set background image and draw border bars
			Rectangle:
				size:self.size
				source:"Background.png"
			Color:
				rgba:black
			Rectangle:
				pos:[bar_height_width,yheight]
				size:[5,-yheight]
			Rectangle:
				pos:[0,yheight-bar_height_width-10]
				size:[xwidth,5]
		cols: 2
		rows: 2

		# Put logo in place
		Image:
			source:"logo.png"
			size_hint_x:None
			size_hint_y:None
			height:bar_height_width
			width:bar_height_width

		# Nest a grid layout for top sidebar with 3 elements
		GridLayout:
			cols: 3
			rows: 1
			size_hint_x:None
			size_hint_y:None
			height:bar_height_width
			width:xwidth-bar_height_width

			# Add a slider for angle selection
			Slider:
				id: value_slider
				min:0
				max:360
				step:1
				value:0
				# When the value changes, call change_value()
				on_value:root.change_value()
				size_hint_x:None
				width:4*bar_height_width

			# Add a label to display current angle selection on slider
			Label:
				id: value_label
				size_hint_x:None
				width:20
				markup:True

			# Add SCAN button - user presses this to start the process
			Button:
				size_hint_y:None
				height:(bar_height_width/100)*92
				text:"SCAN"
				# When pressed, start to scan by calling scan()
				on_press:root.scan()

		# Nest a grid layout for left sidebar with 2 elements
		GridLayout:
			cols:1
			rows:2
			size_hint_x:None
			size_hint_y:None
			height:yheight-bar_height_width-10
			width:bar_height_width
			padding:3

			# Add enabler button to turn the lidar module on/off
			ToggleButton:
				id: enable_lidar
				markup:True
				text:"[size=18]Enable\nLidar\nModule[/size]"

			# Add power off button
			Switch:
				id: onoffswitch2
				active: True
				on_active: root.power_off()

		# Create a scatter widget - this is where the
		# output map will be outputted
		
		# Scatter widgets can be manipulated on the t
		# ouchscreen in all directions
		Scatter:
			size_hint_x:None
			size_hint_y:None
			height:yheight-bar_height_width
			width:xwidth-bar_height_width
			scale_max: 3
			Image:
				id: output_image
				size: self.texture_size
